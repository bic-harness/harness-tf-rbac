pipeline:
  name: onboard-team
  identifier: onboardteam
  projectIdentifier: Self_Service
  orgIdentifier: default
  tags: {}
  stages:
    - stage:
        name: Create Org RBAC
        identifier: Create_Org_RBAC
        description: ""
        type: Custom
        spec:
          execution:
            steps:
              - step:
                  type: TerraformPlan
                  name: Terraform Plan
                  identifier: Terraform_Plan
                  spec:
                    configuration:
                      command: Apply
                      configFiles:
                        store:
                          type: Github
                          spec:
                            gitFetchType: Branch
                            connectorRef: githubehardisty
                            branch: main
                            folderPath: .
                      secretManagerRef: harnessSecretManager
                      backendConfig:
                        type: Inline
                        spec:
                          content: |-
                            key = "<+pipeline.variables.team_id>.terraform.tfstate"
                            resource_group_name  = "tfstate"
                            storage_account_name = "tfstate"
                            container_name       = "tfstate"
                            access_key = "<+pipeline.variables.storage_access_key>"
                      varFiles:
                        - varFile:
                            identifier: tfvars
                            spec:
                              content: |
                                org_id = "<+pipeline.variables.team_id>"
                                org_name = "<+pipeline.variables.team_name>"
                                platform_api_key = "<+pipeline.variables.harness_api_token>"
                                account_id = "<+account.identifier>"
                            type: Inline
                    provisionerIdentifier: org_rbac_create_<+pipeline.variables.team_id>
                  timeout: 10m
                  failureStrategies: []
              - step:
                  type: TerraformApply
                  name: Terraform Apply
                  identifier: Terraform_Apply
                  spec:
                    provisionerIdentifier: org_rbac_create_<+pipeline.variables.team_id>
                    configuration:
                      type: InheritFromPlan
                  timeout: 10m
              - step:
                  type: TerraformRollback
                  name: Terraform Rollback
                  identifier: Terraform_Rollback
                  spec:
                    provisionerIdentifier: org_rbac_create_<+pipeline.variables.team_id>
                  timeout: 10m
                  when:
                    stageStatus: Failure
                  failureStrategies: []
        tags: {}
  variables:
    - name: team_id
      type: String
      description: ""
      value: <+input>
    - name: team_name
      type: String
      description: ""
      value: <+input>
    - name: harness_api_token
      type: Secret
      description: ""
      value: harness_pat_token
    - name: storage_access_key
      type: Secret
      description: "This is only required for azure blob storage terraform state backend. moving to S3 you can replace"
      value: your_access_key
